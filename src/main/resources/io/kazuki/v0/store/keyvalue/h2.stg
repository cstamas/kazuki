group sql;

h2_kv_create_table(kv_table_name) ::=<<
  create table "<kv_table_name>" (
    "_key_type"     smallint unsigned not null,
    "_key_id"       bigint unsigned not null,
    "_created_dt"   int unsigned not null,
    "_updated_dt"   int unsigned not null,
    "_version"      bigint unsigned not null,
    "_is_deleted"   char(1) not null default 'N',
    "_format"       char(1) not null default 'S',
    "_compression"  char(1) not null default 'F',
    "_value"        varbinary not null,
    PRIMARY KEY("_key_type", "_key_id")
  )
>>

h2_kv_create_table_index(kv_table_name) ::=<<
  select 1
>>

h2_kv_create(kv_table_name) ::=<< 
  insert into "<kv_table_name>" ("_key_type", "_key_id", "_created_dt", "_updated_dt", "_version", "_is_deleted", "_format", "_compression", "_value")
  values (:key_type, :key_id, :created_dt, :created_dt, :version, 'N', 'S', 'F', :value)
>>

h2_kv_retrieve(kv_table_name) ::=<< 
  select "_key_type", "_key_id", "_created_dt", "_updated_dt", "_format", "_compression", "_version", "_is_deleted", "_value"
    from "<kv_table_name>"
   where "_key_type" = :key_type
     and "_key_id" = :key_id
     and "_is_deleted" = 'N'
>>

h2_kv_update(kv_table_name) ::=<< 
  update "<kv_table_name>"
    set "_key_type"    = :key_type,
        "_key_id"      = :key_id,
        "_updated_dt"  = :updated_dt,
        "_version"     = :new_version,
        "_value"       = :value
   where "_key_type"   = :key_type
     and "_key_id"     = :key_id
     and "_is_deleted" = 'N'
     and "_version"    = :old_version
>>

h2_kv_delete(kv_table_name) ::=<< 
  update "<kv_table_name>"
    set "_updated_dt" = :updated_dt,
        "_is_deleted" = 'Y'
   where "_key_type" = :key_type
     and "_key_id" = :key_id
>>

h2_kv_delete_hard(kv_table_name) ::=<< 
  delete
    from "<kv_table_name>"
   where "_key_type" = :key_type
     and "_key_id" = :key_id
>>

h2_kv_key_ids_of_type(kv_table_name) ::=<< 
  select "_key_id"
    from "<kv_table_name>"
   where "_key_type" = :key_type
     and "_is_deleted" = 'N'
   limit :limit
  offset :offset
>>

h2_kv_clear_type(kv_table_name) ::=<< 
  delete
    from "<kv_table_name>"
   where "_key_type" = :key_type
>>

h2_kv_truncate(kv_table_name) ::=<< 
  truncate table "<kv_table_name>"
>>

h2_kv_reset(kv_table_name) ::=<< 
  delete from "<kv_table_name>" where "_key_type" > 1
>>

h2_kv_destroy(kv_table_name) ::=<< 
  drop table "<kv_table_name>"
>>